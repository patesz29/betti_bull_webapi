// <auto-generated />
using System;
using BullService.Models.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BullService.Migrations
{
    [DbContext(typeof(CowDbContext))]
    partial class CowDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BullService.Models.Cow.CowMeasurementModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Bcs")
                        .HasColumnType("real");

                    b.Property<float>("BetaKarotin")
                        .HasColumnType("real");

                    b.Property<float>("Bhb")
                        .HasColumnType("real");

                    b.Property<float>("CervixDiameter")
                        .HasColumnType("real");

                    b.Property<int>("CitologyResultCervix")
                        .HasColumnType("int");

                    b.Property<int>("CitologyResultEndometrium")
                        .HasColumnType("int");

                    b.Property<string>("CowId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FirstSuccessfulFertilizationDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("HornDiameter")
                        .HasColumnType("real");

                    b.Property<int>("LeftOvaryState")
                        .HasColumnType("int");

                    b.Property<string>("Lesion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MeasurementDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MeasurementType")
                        .HasColumnType("int");

                    b.Property<float>("Nefa")
                        .HasColumnType("real");

                    b.Property<string>("PregnancyDetectionResult30Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PregnancyDetectionResult60Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QLazResult")
                        .HasColumnType("int");

                    b.Property<int>("RightOvaryState")
                        .HasColumnType("int");

                    b.Property<int>("SuccessfulFertilizationNumber")
                        .HasColumnType("int");

                    b.Property<int>("UterusStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CowId");

                    b.ToTable("CowMeasurements");
                });

            modelBuilder.Entity("BullService.Models.Cow.CowModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CalfSex")
                        .HasColumnType("int");

                    b.Property<int>("CalfWeight")
                        .HasColumnType("int");

                    b.Property<int>("CalvingNumber")
                        .HasColumnType("int");

                    b.Property<float>("ClosedLactationMilkProd")
                        .HasColumnType("real");

                    b.Property<int>("CourseOfCalving")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysOfGestations")
                        .HasColumnType("int");

                    b.Property<int>("EarNumber")
                        .HasColumnType("int");

                    b.Property<int>("EnarNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastCalvingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastFertilizationDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("LastMilkingResult")
                        .HasColumnType("real");

                    b.Property<int>("Site")
                        .HasColumnType("int");

                    b.Property<int>("Treatment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cows");
                });

            modelBuilder.Entity("BullService.Models.PictureModel", b =>
                {
                    b.Property<Guid>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PictureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicturePaths")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PictureId");

                    b.HasIndex("MeasurementId");

                    b.ToTable("CowPictures");
                });

            modelBuilder.Entity("BullService.Models.Cow.CowMeasurementModel", b =>
                {
                    b.HasOne("BullService.Models.Cow.CowModel", "Cow")
                        .WithMany()
                        .HasForeignKey("CowId");
                });

            modelBuilder.Entity("BullService.Models.PictureModel", b =>
                {
                    b.HasOne("BullService.Models.Cow.CowMeasurementModel", "Measurement")
                        .WithMany("MeasurementPictures")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
